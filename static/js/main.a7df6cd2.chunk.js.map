{"version":3,"sources":["Components/keys.js","Components/Button.js","Components/Keypad.js","App.js","serviceWorker.js","index.js"],"names":["keys","Number","Button","style","padding","Object","entries","map","entry","key","className","flexBasis","onTouchEnd","props","mouseup","bind","onMouseDown","mousedown","onMouseUp","item","onClick","this","clear","Component","Keypad","state","text","key_id","arr_no","timerid","Time_stamp","Date","handleButtonPress","id","date","getTime","setState","handleButtonRelease","state_copy","concat","clearTimeout","stateCopy","substring","length","arr_pos","time","timercall","timer","toString","setTimeout","remove","len","Div2","rows","cols","readOnly","resize","value","back","styled","div","App","border","textAlign","width","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a7df6cd2.chunk.js","sourcesContent":["\r\nvar keys = {\r\n    \"1\": Number,\r\n    \"2\": [\"a\", \"b\", \"c\"],\r\n    \"3\": [\"d\", \"e\", \"f\"],\r\n    \"4\": [\"g\", \"h\", \"i\"],\r\n    \"5\": [\"j\", \"k\", \"l\"],\r\n    \"6\": [\"m\", \"n\", \"o\"],\r\n    \"7\": [\"p\", \"q\", \"r\", \"s\"],\r\n    \"8\": [\"t\", \"u\", \"v\"],\r\n    \"9\": [\"w\", \"x\", \"y\", \"z\"],\r\n    \"0\": Number,\r\n  };\r\n\r\n  export default keys","import React, { Component } from 'react'\r\nimport keys from \"./keys\";\r\n\r\nexport default class Button extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{ \"display\": \"flex\",\"justify-content\":\"space-around\",\"flexWrap\":\"wrap\",padding:\"20px\"}}>\r\n            {Object.entries(keys).map((entry) => (\r\n              <div key={entry[0]}  className=\"mt-2 mb-2 ml-2 mr-2\" style={{flexBasis: \"25%\"}} >\r\n                <button\r\n                  className=\"btn btn-primary btn-xg btn-block\"\r\n                  onTouchEnd={this.props.mouseup.bind(this,entry[0])}\r\n                  onMouseDown={this.props.mousedown.bind(this,entry[0])}\r\n                  onMouseUp={this.props.mouseup.bind(this,entry[0])}\r\n                >\r\n                  <div>{entry.map((item) => item)}</div>\r\n                </button>\r\n              </div>\r\n            ))}\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              style={{flexBasis: \"25%\"}}\r\n              key=\"10\"\r\n              onClick={\r\n                this.props}\r\n            >\r\n              <div>back</div>\r\n            </button>\r\n\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              key=\"11\"\r\n              style={{flexBasis: \"25%\"}}\r\n              onClick={\r\n                    this.props.clear}\r\n            >\r\n              <div>Clear</div>\r\n            </button>\r\n          </div>)\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport keys from \"./keys\";\r\nimport styled from 'styled-components';\r\nimport Button from \"./Button\"\r\nexport default class Keypad extends Component {\r\n  \r\n  \r\n    state = {\r\n    text: \"\" /* text displaying on screen */,\r\n    key_id: -1 /* key position */,\r\n    arr_no: 0 /* alphabet in perticular key position */,\r\n    timerid: null /*  Previous timer Running  */,\r\n    Time_stamp: Date /*  time stamp of on mouse down */,\r\n  };\r\n\r\n  /*   on Mouse down event trigger this func  */\r\n  /*   Set the  */\r\n\r\n  handleButtonPress = (id) => {\r\n    const date = new Date().getTime();\r\n    this.setState({ ...this.state, Time_stamp: date });\r\n  };\r\n\r\n  \r\n  /*  on mouse up button to record time diffrenence */ \r\n  \r\n  handleButtonRelease = (id) => {\r\n    /*   condiction for 0 and 1 keys  */\r\n    if (id === \"0\" || id === \"1\") {\r\n      const state_copy = { ...this.state };\r\n      state_copy.text = state_copy.text.concat(id);\r\n      state_copy.timerid = null;\r\n      state_copy.date = null;\r\n      state_copy.id = -1;\r\n      this.setState(state_copy);\r\n      return;\r\n    }\r\n\r\n\r\n    /*   Difference between the mouse up and mouse down    */\r\n\r\n    const currTime = new Date().getTime();\r\n    if (currTime - this.state.Time_stamp < 800) {\r\n      if (this.state.timerid) {\r\n    \r\n    \r\n   /*  Previous timer exits */      \r\n        clearTimeout(this.state.timerid);\r\n\r\n        if (id === this.state.key_id) {\r\n\r\n        /* Same Key is pressed again frequently */\r\n\r\n          const stateCopy = { ...this.state };\r\n\r\n          stateCopy.text = stateCopy.text.substring(\r\n            0,\r\n            stateCopy.text.length - 1\r\n          );\r\n\r\n          let arr_pos =this.state.arr_no;\r\n          \r\n          /* Exception for 7 and 9 key , unless all revert back to 0 cyclically */\r\n          if (!(id === \"7\" || id === \"9\")) {\r\n            if (arr_pos === 2) {\r\n              arr_pos = 0;\r\n            } else {\r\n              arr_pos = arr_pos + 1;\r\n            }\r\n          } else {\r\n            if (arr_pos === 3) {\r\n              arr_pos = 0;\r\n            } else {\r\n              arr_pos = arr_pos + 1;\r\n            }\r\n          }\r\n\r\n          stateCopy.arr_no = arr_pos;\r\n\r\n          stateCopy.text = stateCopy.text.concat(keys[id][arr_pos]);\r\n\r\n          const time = this.timercall();\r\n          stateCopy.timerid = time;\r\n          this.setState(stateCopy);\r\n        } else {\r\n\r\n            /*   Different Key is pressed frequently */\r\n          const stateCopy = { ...this.state };\r\n          stateCopy.text = stateCopy.text.concat(keys[id][0]);\r\n          stateCopy.key_id = id;\r\n          stateCopy.arr_no = 0;\r\n          const time = this.timercall();\r\n          stateCopy.timerid = time;\r\n          this.setState(stateCopy);\r\n        }\r\n      } else {\r\n\r\n        /*   if previous timer is not there  */\r\n        const timer = this.timercall();\r\n\r\n        const stateCopy = { ...this.state };\r\n        stateCopy.text = stateCopy.text.concat(keys[id][0]);\r\n        stateCopy.key_id = id;\r\n        stateCopy.arr_no = 0;\r\n        stateCopy.timerid = timer;\r\n        this.setState(stateCopy);\r\n      }\r\n    } else {\r\n\r\n      /*   Long press of key to show button   */\r\n      const stateCopy = { ...this.state };\r\n      stateCopy.text = stateCopy.text.concat(id.toString());\r\n      stateCopy.key_id = -1;\r\n      stateCopy.arr_no = 0;\r\n      stateCopy.timerid = null;\r\n      this.setState(stateCopy);\r\n    }\r\n  };\r\n\r\n\r\n\r\n/* Timer function  */\r\n\r\n  timercall = () => {\r\n    const timer = setTimeout(() => {\r\n      const stateCopy = { ...this.state };\r\n      stateCopy.key_id = -1;\r\n      stateCopy.arr_no = 0;\r\n      stateCopy.timerid = null;\r\n      this.setState(stateCopy);\r\n    }, 2000);\r\n    return timer;\r\n  };\r\n\r\n\r\n\r\n  /*   To remove the rightmost alphabet on screen */\r\n  remove = () => {\r\n    clearTimeout(this.state.timerid);\r\n    const stateCopy = { ...this.state };\r\n    const len = stateCopy.text.length;\r\n    stateCopy.text = stateCopy.text.substring(0, len - 1);\r\n    stateCopy.timerid = null;\r\n    this.setState(stateCopy);\r\n  };\r\n\r\n\r\n  /*   To clear all screen */\r\n  clear = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      text: \"\",\r\n      key_id: -1,\r\n      arr_no: 0,\r\n      timerid: null,\r\n      Time_stamp: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Div2>\r\n          <h2 className=\"mt-3\">Keypad</h2>\r\n          <textarea\r\n          rows=\"1\" cols=\"27\"\r\n            className=\"mt-2\"\r\n            readOnly\r\n            style={{ resize: \"none\" }}\r\n            value={this.state.text}\r\n          />\r\n          <div></div>\r\n           \r\n        <Button clear={this.clear} back={this.remove} \r\n        mousedown={(id)=>{this.handleButtonPress(id)}}\r\n         mouseup={(id)=>{this.handleButtonRelease(id)}}   />            \r\n          \r\n        </Div2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst Div2=styled.div`\r\nheight: 400px;\r\nwidth: 350px;\r\ntextAlign: center;\r\nmargin: auto;\r\nborder: 2px red solid;\r\nbackground: #FFFF00;\r\n\r\n`;","import React from 'react';\nimport Keypad from \"./Components/Keypad\"\nfunction App() {\n  return (\n    <div className=\"App\">\n   <div style={{border:\"2px black solid\",textAlign:\"center\",width:\"100%\"}}>\n    <Keypad/>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}